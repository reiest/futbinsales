@page
@model FutbinSales.Pages.Sales.IndexModel

@{
    ViewData["Title"] = "Index";
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<h1>Player's sale data</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<p>
    <a asp-page="GetPlayers">Get players</a>
</p>
<div class="form-group">
    <label for="search">Search:</label>
    <input type="text" id="search" class="form-control" placeholder="Search by player name">
</div>
<div class="form-group">
    <label for="category" class="control-label"></label>
    <select class="form-control" asp-items="ViewBag.CategoryId"></select>
</div>


<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Player[0].Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Player[0].buyPrice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Player[0].minPrice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Player[0].avgPrice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Player[0].maxPrice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Player[0].trend)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Player[0].mostSalesInterval)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Player[0].salesOverAvg)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Player[0].medianPerThird)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Player[0].dataFromLastXHours)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Player[0].salesCount)
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Player) {
        <tr class="player-row">
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.buyPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.minPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.avgPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.maxPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.trend)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.mostSalesInterval)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.salesOverAvg)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.medianPerThird)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.dataFromLastXHours)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.salesCount)
            </td>
            <td>
                <a asp-page="./GetData" asp-route-id="@item.Id">Refresh data</a>
            </td>
        </tr>
}
    </tbody>
</table>
<script>
    $(document).ready(function () {
        $("#search, #category").on("keyup", function () {
            var searchText = $("#search").val().toLowerCase();
            // var categoryFilter = $("#category").val();
            // console.log(categoryFilter);
            
            $(".player-row").each(function () {
                var playerName = $(this).find("td:eq(1)").text().toLowerCase(); // Assuming player name is in the second column
                // var playerCategory = $(this).find("td:eq(-1)").text(); 
                 var shouldShow = playerName.indexOf(searchText) !== -1 // && (categoryFilter === "" || playerCategory.indexOf(categoryFilter) !== -1);

                if (shouldShow) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });
        });
    });

</script>